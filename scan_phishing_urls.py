import argparse
import requests
import traceback

SCANNER_ENDPOINT = "http://127.0.0.1:9080/"


def replace_variable_in_text(text: str, name: str, value: str) -> str:
    return text.replace("${" + name + "}", value)


def scan(html: str) -> bool:
    files = {"file": ("test.html", html)}
    r = requests.post(SCANNER_ENDPOINT, files=files)
    try:
        result = r.json()
        if "is detected" in result["message"]:
            return True
        elif "OK" in result["message"]:
            return False
    except Exception:
        traceback.print_exc()
    return None  # type: ignore


def format_result(url: str, result: bool) -> str:
    if result is None:
        return f"[ERROR]{url}"
    elif result:
        return f"[DANGER URL]{url}"
    else:
        return f"[SAFE URL]{url}"


def main(args):
    html_template = None
    with open(args.html_template, "r") as fin:
        html_template = fin.read()
    with open(args.output, "a") as fout:
        with open(args.urls, "r") as fin:
            while True:
                line = fin.readline()
                if not line:
                    break
                url = line.strip()
                if url.startswith("#"):
                    continue
                html = replace_variable_in_text(html_template, "URL", url)
                result = format_result(url, scan(html))
                fout.write(result + "\n")
                if result.startswith("[ERROR]"):
                    break


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Phishing urls scanning tester")
    parser.add_argument(
        "--html-template",
        dest="html_template",
        type=str,
        help="Path of a html template file",
    )
    parser.add_argument(
        "--urls",
        dest="urls",
        type=str,
        help="Path of URLs list file",
    )
    parser.add_argument(
        "--output",
        dest="output",
        type=str,
        required=True,
        help="Path of an output file",
    )
    args = parser.parse_args()
    main(args)
