import os
import io
import json
from flask import Flask, request, make_response
from werkzeug.datastructures import FileStorage
from logger_factory import LoggerFactory
from malware_scanner import MalwareScanner

LOGGER_LEVEL = os.environ.get("LOGGER_LEVEL", "INFO")
logger = LoggerFactory.get_logger(__name__, log_level=LOGGER_LEVEL)

app = Flask(__name__)


@app.route("/", methods=["GET", "POST"])  # type: ignore
def handler():
    try:
        http_method = request.method.upper()
        request_headers = dict(request.headers)
        request_params = None
        if http_method == "GET":
            request_params = dict(request.args)
        elif http_method == "POST":
            if request.headers.get("Content-Type") == "application/json":
                request_params = dict(request.json)  # type: ignore
            else:
                request_params = dict(request.form)
        with io.BytesIO() as ostream:
            ostream.write(json.dumps(request_headers, ensure_ascii=False).encode())
            ostream.write(json.dumps(request_params, ensure_ascii=False).encode())
            if MalwareScanner.scan(FileStorage(ostream)):
                return make_response({"message": "[ALARM]Malware is detected!"}, 400)
        if request.files:
            for key, file in request.files.items():
                if not key or not file:
                    continue
                logger.info(key)
                if MalwareScanner.scan(file):
                    return make_response(
                        {"message": "[ALARM]Malware is detected!"}, 400
                    )
    except Exception:
        logger.error("Exception", exc_info=True)
        return make_response({"message": "Unknown error"}, 500)
    return make_response({"message": "OK"}, 200)
